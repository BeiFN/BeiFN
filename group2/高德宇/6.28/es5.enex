<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20190628T004225Z" application="Evernote/Windows" version="6.x">
<note><title>es5</title><content><![CDATA[<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><en-note><div style="font-size: 14px; margin: 0; padding: 0; width: 100%;"><p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;">ES5 :<br/>
ES是目前公认的我们稳定兼容的版本;<br/>
IE8 +<br/>
增加了很多内容;</p>
<ol style="line-height: 160%; box-sizing: content-box; display: block; padding-left: 30px; margin: 6px 0 10px; color: #333; list-style-type: decimal;">
<li style="line-height: 160%; box-sizing: content-box;">严格模式;</li>
<li style="line-height: 160%; box-sizing: content-box;">扩展了数组类型的方法;</li>
<li style="line-height: 160%; box-sizing: content-box;">扩展了部分对象里的方法;</li>
<li style="line-height: 160%; box-sizing: content-box;">提供了新的对象 JSON ;</li>
</ol>
<h6 style="line-height: 160%; box-sizing: content-box; font-size: 13px; color: #333;"><strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">1 .严格模式</strong> "use strict"</h6>
<ol style="line-height: 160%; box-sizing: content-box; display: block; padding-left: 30px; margin: 6px 0 10px; color: #333; list-style-type: decimal;">
<li style="line-height: 160%; box-sizing: content-box;">全局严格</li>
<li style="line-height: 160%; box-sizing: content-box;">局部严格;<br/>
提高代码执行效率;</li>
<li style="line-height: 160%; box-sizing: content-box;">变量的严格;</li>
<li style="line-height: 160%; box-sizing: content-box;">参数的严格;</li>
<li style="line-height: 160%; box-sizing: content-box;">函数的严格;<br/>
4*. 一个语法的注意事项;</li>
</ol>
<pre style="line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;"><code style="display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;">严格模式下变量必须先声明再赋值;
;(function(){
"use strict"
function foo(a,b){
// 形参被赋值不会影响到arguments里面的参数;
a = 10;
b = 20;
console.log(a,b,arguments[0],arguments[1])
}
foo(1,2)
})()\\102012
但凡是 this 指向了window，那么距离报错就不远了;
;(function(){
"use strict"
function foo(){
console.log(this);
}\\underfine
foo()
})();
;(function(){
function foo(){
console.log(this);
}
foo()
})();
不允许使用arguments.callee
;(function(){
"use strict"
function foo(){
arguments.callee
}
foo()
})();
;(function(){
function foo(){
arguments.callee
}
foo()
})();
;(function(){
"use strict"
function foo(a,a,b){ \\语法不对
console.log(a,b);
}
foo(1,2,3)
})();
;(function(){
function foo(a,a,b){
console.log(a,b);
}
foo(1,2,3)
})();
</code></pre>
<h6 style="line-height: 160%; box-sizing: content-box; font-size: 13px; color: #333;">数组方法</h6>
<pre style="line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;"><code style="display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;">foreach  |   map    |   filter |    some    |   every   |   flat    
</code></pre>
<p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;"><strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">foreach</strong> arr.foreach(function(ite,index,arr){<br/>
})执行 调用数组次 接受一个函数作为参数<br/>
myForEach( arr , function( item , index , arr){<br/>
// console.log(item , index , arr)<br/>
// } )<br/>
foreach 没有返回值 为underfine<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">map</strong><br/>
var arr = [15000,20000,21000,26000,3000,2000,8000];<br/>
var res = [];<br/>
arr.forEach( function ( item ){<br/>
res.push( item * 1.3)<br/>
})<br/>
function myMap( arr , fn){<br/>
var res = [];<br/>
for(var i = 0 ; i &lt; arr.length ; i ++){<br/>
res.push( fn( arr[i] , i , arr ) );<br/>
}<br/>
return res;<br/>
}<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">filter</strong><br/>
返回新数组.会根据参数函数的返回值判定是否该讲具体的项加入新数组<br/>
var arr = [15000,20000,21000,26000,3000,2000,8000];<br/>
var newArray = arr.filter( function(item , index){<br/>
return item &gt;= 10000;<br/>
} )<br/>
console.log(newArray);<br/>
function myFilter(arr , fn){<br/>
var res = [];<br/>
for(var i = 0 ; i &lt; arr.length ; i ++){<br/>
if(fn(arr[i] , i , arr)){<br/>
res.push(arr[i])<br/>
}<br/>
}<br/>
return res;<br/>
}<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">some</strong><br/>
var arr = [15000,20000,21000,26000,3000,2000,8000];<br/>
var boolean = arr.some( function (item , index , arr){<br/>
console.log(item);<br/>
return item === 3000<br/>
})<br/>
console.log(boolean);<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">every</strong><br/>
var arr = [15000,20000,21000,26000,3000,2000,8000];<br/>
var boolean = arr.every(function( item , index , arr){<br/>
// console.log(1);<br/>
return item % 2 === 0<br/>
})<br/>
console.log(boolean);<br/>
function myEvery( arr , fn){<br/>
for(var i = 0 ; i &lt; arr.length ; i++){<br/>
if(!fn(arr[i],i,arr)){<br/>
return false<br/>
}<br/>
}<br/>
return true;<br/>
}<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">reduce</strong><br/>
var res = arr.reduce(function(pre , now , index , arr){<br/>
console.log(pre,now ,index);<br/>
return pre + now;<br/>
})<br/>
console.log(res);<br/>
function myReduce( arr , fn ){<br/>
var prev = arr[0];<br/>
for(var i = 1 ; i &lt; arr.length ; i++){<br/>
prev = fn( prev , arr[i] , i , arr);<br/>
}<br/>
return prev;<br/>
}<br/>
console.log(myReduce( arr , function(prev,now , index){<br/>
return prev + now;<br/>
} ))<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">flat</strong>      扁平化<br/>
function flat(arr){<br/>
var res = [];<br/>
for(var i = 0 ; i &lt; arr.length ; i ++){<br/>
//只要不是数组我就push<br/>
if(!(arr[i] instanceof Array)){<br/>
res.push(arr[i])<br/>
}else{<br/>
flat();<br/>
}<br/>
}<br/>
return res ;<br/>
}<br/>
function flat(arr){<br/>
// 判定是否是第一次执行flat ;<br/>
if(!flat.res){<br/>
flat.res = [];<br/>
}<br/>
for(var i = 0 ; i &lt; arr.length ; i ++){<br/>
//只要不是数组我就push<br/>
if(!(arr[i] instanceof Array)){<br/>
flat.res.push(arr[i])<br/>
}else{<br/>
flat(arr[i]);<br/>
}<br/>
}<br/>
return flat.res ;<br/>
}</p>
<h6 style="line-height: 160%; box-sizing: content-box; font-size: 13px; color: #333;">object</h6>
<pre style="line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;"><code style="display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;">Object.defineProperty();
定义 属性;
1. 属性拦截器形态 ;
2. 设置属性的各个特性;
var obj = {b:1};
Object.defineProperty( obj , "a" , {
// 不可删除;
configurable : true,
不可枚举;
enumerable : true,
value : "hello world",
writable : true
})
delete obj.a;

for(var attr in obj ){
console.log(attr);
}
</code></pre>
<p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;">封装</p>
<pre style="line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;"><code style="display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;">//obj.defineproperty 封装
var obj = {
$data : {}
}
Object.defineProperty( obj, "a" ,{
get : function(){
return this.$data.a ;
},
set : function(val){
// this.a = val;
//加 $~是封装的比需 
// 如果这样进行复制的话，会直接发生范围错误;
this.$data.a = val;
}
})
obj.a = 1;
console.log(obj);
</code></pre>
<p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;">题：</p>
<p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;">console.log(obj.a === 1 &amp;&amp; obj.a === 2 &amp;&amp; obj.a === 3 &amp;&amp; obj.a === 4);</p>
<pre style="line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;"><code style="display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;">var obj = {
$data : {}
}
Object.defineProperty( obj, "a" ,{
get : function(){
return this.$data.a ++;
},
set : function(val){
this.$data.a = val;
}
})
obj.a = 1;
console.log( obj.a === 1 &amp;&amp; obj.a === 2 &amp;&amp; obj.a === 3)
</code></pre>
<p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;"><strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">JSON</strong><br/>
var json = '{"a" : "b" , "c" : "d"}';<br/>
var json = "{'a':'123'}";// 规定 json'引号  不合法 不只是js多种的语言<br/>
console.log( eval("("+json+") ") ) // 解析-》对象<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">JSON.parse</strong> 解析字符串时如果遇到了不符合json规范的字符串,这个时候json.parse就会报出错误;用来提示字符串之中哪里出现了错误;<br/>
console.log( JSON.parse(json) )<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">JSON.stringify</strong>();<br/>
var obj = {<br/>
a : 10,<br/>
"b":{},<br/>
"c" : []<br/>
} // 变成 Json<br/>
console.log(JSON.stringify(obj));</p>
<p style="line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;"><strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">object.keys(obj</strong>)    []<br/>
<strong style="line-height: 160%; box-sizing: content-box; font-weight: 700;">obj.values(obj</strong>)     []</p>
<pre style="line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;"><code style="display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;">
var obj = {
a : 1,
b : 2,
c : 3,
d : 4
}
console.log(Object.keys(obj));
var json = {
"1130" : {
name : "这是一个商品",
price : 998
},
"1134" : {
name : "这是一个商品",
price : 991
},
"1230" : {
name : "这是一个商品",
price : 992
},
"1140" : {
name : "这是一个商品",
price : 993
},
"1230" : {
name : "这是一个商品",
price : 9945
}
}

var ;
for(var attr in json){
if(attr == id){
console.log("匹配",json[attr]);
break;
}
}
无循环的对象之中数据查找;
var keys = Object.keys(json);
var index = keys.indexOf(id);
console.log(json[keys[index]])
console.log(json[id])
console.log(Object.values(json)[index]
console.log(Object.values(json));

</code></pre>
</div><center style='display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden'>ES5%20%3A%0AES%E6%98%AF%E7%9B%AE%E5%89%8D%E5%85%AC%E8%AE%A4%E7%9A%84%E6%88%91%E4%BB%AC%E7%A8%B3%E5%AE%9A%E5%85%BC%E5%AE%B9%E7%9A%84%E7%89%88%E6%9C%AC%3B%0AIE8%20%2B%0A%E5%A2%9E%E5%8A%A0%E4%BA%86%E5%BE%88%E5%A4%9A%E5%86%85%E5%AE%B9%3B%0A1.%20%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%3B%0A2.%20%E6%89%A9%E5%B1%95%E4%BA%86%E6%95%B0%E7%BB%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95%3B%0A3.%20%E6%89%A9%E5%B1%95%E4%BA%86%E9%83%A8%E5%88%86%E5%AF%B9%E8%B1%A1%E9%87%8C%E7%9A%84%E6%96%B9%E6%B3%95%3B%0A4.%20%E6%8F%90%E4%BE%9B%E4%BA%86%E6%96%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%20JSON%20%3B%0A%0A%23%23%23%23%23%23%20**1%20.%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F**%20%22use%20strict%22%0A1.%20%E5%85%A8%E5%B1%80%E4%B8%A5%E6%A0%BC%20%0A2.%20%E5%B1%80%E9%83%A8%E4%B8%A5%E6%A0%BC%3B%0A%E6%8F%90%E9%AB%98%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%95%88%E7%8E%87%3B%0A1.%20%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%3B%0A2.%20%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%A5%E6%A0%BC%3B%0A3.%20%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%A5%E6%A0%BC%3B%0A4*.%20%E4%B8%80%E4%B8%AA%E8%AF%AD%E6%B3%95%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%3B%0A%60%60%60%0A%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E5%8F%98%E9%87%8F%E5%BF%85%E9%A1%BB%E5%85%88%E5%A3%B0%E6%98%8E%E5%86%8D%E8%B5%8B%E5%80%BC%3B%0A%3B(function()%7B%0A%22use%20strict%22%0Afunction%20foo(a%2Cb)%7B%0A%2F%2F%20%E5%BD%A2%E5%8F%82%E8%A2%AB%E8%B5%8B%E5%80%BC%E4%B8%8D%E4%BC%9A%E5%BD%B1%E5%93%8D%E5%88%B0arguments%E9%87%8C%E9%9D%A2%E7%9A%84%E5%8F%82%E6%95%B0%3B%0Aa%20%3D%2010%3B%0Ab%20%3D%2020%3B%0Aconsole.log(a%2Cb%2Carguments%5B0%5D%2Carguments%5B1%5D)%0A%7D%0Afoo(1%2C2)%0A%7D)()%5C%5C102012%0A%E4%BD%86%E5%87%A1%E6%98%AF%20this%20%E6%8C%87%E5%90%91%E4%BA%86window%EF%BC%8C%E9%82%A3%E4%B9%88%E8%B7%9D%E7%A6%BB%E6%8A%A5%E9%94%99%E5%B0%B1%E4%B8%8D%E8%BF%9C%E4%BA%86%3B%0A%3B(function()%7B%0A%22use%20strict%22%0Afunction%20foo()%7B%0Aconsole.log(this)%3B%0A%7D%5C%5Cunderfine%0Afoo()%0A%7D)()%3B%0A%3B(function()%7B%0Afunction%20foo()%7B%0Aconsole.log(this)%3B%0A%7D%0Afoo()%0A%7D)()%3B%0A%E4%B8%8D%E5%85%81%E8%AE%B8%E4%BD%BF%E7%94%A8arguments.callee%0A%3B(function()%7B%0A%22use%20strict%22%0Afunction%20foo()%7B%0Aarguments.callee%0A%7D%0Afoo()%0A%7D)()%3B%0A%3B(function()%7B%0Afunction%20foo()%7B%0Aarguments.callee%0A%7D%0Afoo()%0A%7D)()%3B%0A%3B(function()%7B%0A%22use%20strict%22%0Afunction%20foo(a%2Ca%2Cb)%7B%20%5C%5C%E8%AF%AD%E6%B3%95%E4%B8%8D%E5%AF%B9%0Aconsole.log(a%2Cb)%3B%0A%7D%0Afoo(1%2C2%2C3)%0A%7D)()%3B%0A%3B(function()%7B%0Afunction%20foo(a%2Ca%2Cb)%7B%0Aconsole.log(a%2Cb)%3B%0A%7D%0Afoo(1%2C2%2C3)%0A%7D)()%3B%0A%60%60%60%0A%0A%0A%23%23%23%23%23%23%20%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%0A%60%60%60%0Aforeach%20%20%7C%20%20%20map%20%20%20%20%7C%20%20%20filter%20%7C%20%20%20%20some%20%20%20%20%7C%20%20%20every%20%20%20%7C%20%20%20flat%20%20%20%20%0A%60%60%60%20%0A**foreach**%20arr.foreach(function(ite%2Cindex%2Carr)%7B%20%20%20%0A%20%7D)%E6%89%A7%E8%A1%8C%20%E8%B0%83%E7%94%A8%E6%95%B0%E7%BB%84%E6%AC%A1%20%E6%8E%A5%E5%8F%97%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%20%0AmyForEach(%20arr%20%2C%20function(%20item%20%2C%20index%20%2C%20arr)%7B%0A%2F%2F%20console.log(item%20%2C%20index%20%2C%20arr)%0A%2F%2F%20%7D%20)%0Aforeach%20%E6%B2%A1%E6%9C%89%E8%BF%94%E5%9B%9E%E5%80%BC%20%E4%B8%BAunderfine%0A%20%20**map**%20%0Avar%20arr%20%3D%20%5B15000%2C20000%2C21000%2C26000%2C3000%2C2000%2C8000%5D%3B%0Avar%20res%20%3D%20%5B%5D%3B%0Aarr.forEach(%20function%20(%20item%20)%7B%0Ares.push(%20item%20*%201.3)%0A%7D)%0Afunction%20myMap(%20arr%20%2C%20fn)%7B%0Avar%20res%20%3D%20%5B%5D%3B%0Afor(var%20i%20%3D%200%20%3B%20i%20%3C%20arr.length%20%3B%20i%20%2B%2B)%7B%0Ares.push(%20fn(%20arr%5Bi%5D%20%2C%20i%20%2C%20arr%20)%20)%3B%0A%7D%0Areturn%20res%3B%0A%7D%0A%20%20**filter**%20%0A%E8%BF%94%E5%9B%9E%E6%96%B0%E6%95%B0%E7%BB%84.%E4%BC%9A%E6%A0%B9%E6%8D%AE%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E5%88%A4%E5%AE%9A%E6%98%AF%E5%90%A6%E8%AF%A5%E8%AE%B2%E5%85%B7%E4%BD%93%E7%9A%84%E9%A1%B9%E5%8A%A0%E5%85%A5%E6%96%B0%E6%95%B0%E7%BB%84%0Avar%20arr%20%3D%20%5B15000%2C20000%2C21000%2C26000%2C3000%2C2000%2C8000%5D%3B%0Avar%20newArray%20%3D%20arr.filter(%20function(item%20%2C%20index)%7B%0Areturn%20item%20%3E%3D%2010000%3B%0A%7D%20)%0Aconsole.log(newArray)%3B%0Afunction%20myFilter(arr%20%2C%20fn)%7B%0Avar%20res%20%3D%20%5B%5D%3B%0Afor(var%20i%20%3D%200%20%3B%20i%20%3C%20arr.length%20%3B%20i%20%2B%2B)%7B%0Aif(fn(arr%5Bi%5D%20%2C%20i%20%2C%20arr))%7B%0Ares.push(arr%5Bi%5D)%0A%7D%0A%7D%0Areturn%20res%3B%0A%7D%0A%20**some**%20%0Avar%20arr%20%3D%20%5B15000%2C20000%2C21000%2C26000%2C3000%2C2000%2C8000%5D%3B%0Avar%20boolean%20%3D%20arr.some(%20function%20(item%20%2C%20index%20%2C%20arr)%7B%0Aconsole.log(item)%3B%0Areturn%20item%20%3D%3D%3D%203000%0A%7D)%0Aconsole.log(boolean)%3B%0A%20**every**%0Avar%20arr%20%3D%20%5B15000%2C20000%2C21000%2C26000%2C3000%2C2000%2C8000%5D%3B%0Avar%20boolean%20%3D%20arr.every(function(%20item%20%2C%20index%20%2C%20arr)%7B%0A%2F%2F%20console.log(1)%3B%0Areturn%20item%20%25%202%20%3D%3D%3D%200%0A%7D)%0Aconsole.log(boolean)%3B%0Afunction%20myEvery(%20arr%20%2C%20fn)%7B%0Afor(var%20i%20%3D%200%20%3B%20i%20%3C%20arr.length%20%3B%20i%2B%2B)%7B%0Aif(!fn(arr%5Bi%5D%2Ci%2Carr))%7B%0Areturn%20false%0A%7D%0A%7D%0Areturn%20true%3B%0A%7D%0A%20**reduce**%20%0Avar%20res%20%3D%20arr.reduce(function(pre%20%2C%20now%20%2C%20index%20%2C%20arr)%7B%0Aconsole.log(pre%2Cnow%20%2Cindex)%3B%0Areturn%20pre%20%2B%20now%3B%0A%7D)%0Aconsole.log(res)%3B%0Afunction%20myReduce(%20arr%20%2C%20fn%20)%7B%0Avar%20prev%20%3D%20arr%5B0%5D%3B%0Afor(var%20i%20%3D%201%20%3B%20i%20%3C%20arr.length%20%3B%20i%2B%2B)%7B%0Aprev%20%3D%20fn(%20prev%20%2C%20arr%5Bi%5D%20%2C%20i%20%2C%20arr)%3B%0A%7D%0Areturn%20prev%3B%0A%7D%0Aconsole.log(myReduce(%20arr%20%2C%20function(prev%2Cnow%20%2C%20index)%7B%0Areturn%20prev%20%2B%20now%3B%0A%7D%20))%0A%20%20**flat**%20%20%20%20%20%20%E6%89%81%E5%B9%B3%E5%8C%96%20%0Afunction%20flat(arr)%7B%0Avar%20res%20%3D%20%5B%5D%3B%0Afor(var%20i%20%3D%200%20%3B%20i%20%3C%20arr.length%20%3B%20i%20%2B%2B)%7B%0A%2F%2F%E5%8F%AA%E8%A6%81%E4%B8%8D%E6%98%AF%E6%95%B0%E7%BB%84%E6%88%91%E5%B0%B1push%0Aif(!(arr%5Bi%5D%20instanceof%20Array))%7B%0Ares.push(arr%5Bi%5D)%0A%7Delse%7B%0Aflat()%3B%0A%7D%0A%7D%0Areturn%20res%20%3B%0A%7D%0Afunction%20flat(arr)%7B%0A%2F%2F%20%E5%88%A4%E5%AE%9A%E6%98%AF%E5%90%A6%E6%98%AF%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%89%A7%E8%A1%8Cflat%20%3B%0Aif(!flat.res)%7B%0Aflat.res%20%3D%20%5B%5D%3B%0A%7D%0Afor(var%20i%20%3D%200%20%3B%20i%20%3C%20arr.length%20%3B%20i%20%2B%2B)%7B%0A%2F%2F%E5%8F%AA%E8%A6%81%E4%B8%8D%E6%98%AF%E6%95%B0%E7%BB%84%E6%88%91%E5%B0%B1push%0Aif(!(arr%5Bi%5D%20instanceof%20Array))%7B%0Aflat.res.push(arr%5Bi%5D)%0A%7Delse%7B%0Aflat(arr%5Bi%5D)%3B%0A%7D%0A%7D%0Areturn%20flat.res%20%3B%0A%7D%0A%0A%0A%23%23%23%23%23%23%20object%20%0A%60%60%60%0AObject.defineProperty()%3B%0A%E5%AE%9A%E4%B9%89%20%E5%B1%9E%E6%80%A7%3B%0A1.%20%E5%B1%9E%E6%80%A7%E6%8B%A6%E6%88%AA%E5%99%A8%E5%BD%A2%E6%80%81%20%3B%0A2.%20%E8%AE%BE%E7%BD%AE%E5%B1%9E%E6%80%A7%E7%9A%84%E5%90%84%E4%B8%AA%E7%89%B9%E6%80%A7%3B%0Avar%20obj%20%3D%20%7Bb%3A1%7D%3B%0AObject.defineProperty(%20obj%20%2C%20%22a%22%20%2C%20%7B%0A%2F%2F%20%E4%B8%8D%E5%8F%AF%E5%88%A0%E9%99%A4%3B%0Aconfigurable%20%3A%20true%2C%0A%E4%B8%8D%E5%8F%AF%E6%9E%9A%E4%B8%BE%3B%0Aenumerable%20%3A%20true%2C%0Avalue%20%3A%20%22hello%20world%22%2C%0Awritable%20%3A%20true%0A%7D)%0Adelete%20obj.a%3B%0A%0Afor(var%20attr%20in%20obj%20)%7B%0Aconsole.log(attr)%3B%0A%7D%0A%60%60%60%0A%0A%20%E5%B0%81%E8%A3%85%0A%20%60%60%60%20%0A%2F%2Fobj.defineproperty%20%E5%B0%81%E8%A3%85%0Avar%20obj%20%3D%20%7B%0A%24data%20%3A%20%7B%7D%0A%7D%0AObject.defineProperty(%20obj%2C%20%22a%22%20%2C%7B%0Aget%20%3A%20function()%7B%0Areturn%20this.%24data.a%20%3B%0A%7D%2C%0Aset%20%3A%20function(val)%7B%0A%2F%2F%20this.a%20%3D%20val%3B%0A%2F%2F%E5%8A%A0%20%24~%E6%98%AF%E5%B0%81%E8%A3%85%E7%9A%84%E6%AF%94%E9%9C%80%20%0A%2F%2F%20%E5%A6%82%E6%9E%9C%E8%BF%99%E6%A0%B7%E8%BF%9B%E8%A1%8C%E5%A4%8D%E5%88%B6%E7%9A%84%E8%AF%9D%EF%BC%8C%E4%BC%9A%E7%9B%B4%E6%8E%A5%E5%8F%91%E7%94%9F%E8%8C%83%E5%9B%B4%E9%94%99%E8%AF%AF%3B%0Athis.%24data.a%20%3D%20val%3B%0A%7D%0A%7D)%0Aobj.a%20%3D%201%3B%0Aconsole.log(obj)%3B%0A%60%60%60%0A%0A%E9%A2%98%EF%BC%9A%0A%0Aconsole.log(obj.a%20%3D%3D%3D%201%20%26%26%20obj.a%20%3D%3D%3D%202%20%26%26%20obj.a%20%3D%3D%3D%203%20%26%26%20obj.a%20%3D%3D%3D%204)%3B%0A%60%60%60%0Avar%20obj%20%3D%20%7B%0A%24data%20%3A%20%7B%7D%0A%7D%0AObject.defineProperty(%20obj%2C%20%22a%22%20%2C%7B%0Aget%20%3A%20function()%7B%0Areturn%20this.%24data.a%20%2B%2B%3B%0A%7D%2C%0Aset%20%3A%20function(val)%7B%0Athis.%24data.a%20%3D%20val%3B%0A%7D%0A%7D)%0Aobj.a%20%3D%201%3B%0Aconsole.log(%20obj.a%20%3D%3D%3D%201%20%26%26%20obj.a%20%3D%3D%3D%202%20%26%26%20obj.a%20%3D%3D%3D%203)%0A%60%60%60%0A%20**JSON**%0Avar%20json%20%3D%20'%7B%22a%22%20%3A%20%22b%22%20%2C%20%22c%22%20%3A%20%22d%22%7D'%3B%0Avar%20json%20%3D%20%22%7B'a'%3A'123'%7D%22%3B%2F%2F%20%E8%A7%84%E5%AE%9A%20json'%E5%BC%95%E5%8F%B7%20%20%E4%B8%8D%E5%90%88%E6%B3%95%20%E4%B8%8D%E5%8F%AA%E6%98%AFjs%E5%A4%9A%E7%A7%8D%E7%9A%84%E8%AF%AD%E8%A8%80%0Aconsole.log(%20eval(%22(%22%2Bjson%2B%22)%20%22)%20)%20%2F%2F%20%E8%A7%A3%E6%9E%90-%E3%80%8B%E5%AF%B9%E8%B1%A1%0A**JSON.parse**%20%E8%A7%A3%E6%9E%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%E5%A6%82%E6%9E%9C%E9%81%87%E5%88%B0%E4%BA%86%E4%B8%8D%E7%AC%A6%E5%90%88json%E8%A7%84%E8%8C%83%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%2C%E8%BF%99%E4%B8%AA%E6%97%B6%E5%80%99json.parse%E5%B0%B1%E4%BC%9A%E6%8A%A5%E5%87%BA%E9%94%99%E8%AF%AF%3B%E7%94%A8%E6%9D%A5%E6%8F%90%E7%A4%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%8B%E4%B8%AD%E5%93%AA%E9%87%8C%E5%87%BA%E7%8E%B0%E4%BA%86%E9%94%99%E8%AF%AF%3B%0Aconsole.log(%20JSON.parse(json)%20)%0A**JSON.stringify**()%3B%0Avar%20obj%20%3D%20%7B%0Aa%20%3A%2010%2C%0A%22b%22%3A%7B%7D%2C%0A%22c%22%20%3A%20%5B%5D%0A%7D%20%2F%2F%20%E5%8F%98%E6%88%90%20Json%0Aconsole.log(JSON.stringify(obj))%3B%0A%0A**object.keys(obj**)%20%20%20%20%5B%5D%0A**obj.values(obj**)%20%20%20%20%20%5B%5D%0A%60%60%60%0A%0Avar%20obj%20%3D%20%7B%0Aa%20%3A%201%2C%0Ab%20%3A%202%2C%0Ac%20%3A%203%2C%0Ad%20%3A%204%0A%7D%0Aconsole.log(Object.keys(obj))%3B%0Avar%20json%20%3D%20%7B%0A%221130%22%20%3A%20%7B%0Aname%20%3A%20%22%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%95%86%E5%93%81%22%2C%0Aprice%20%3A%20998%0A%7D%2C%0A%221134%22%20%3A%20%7B%0Aname%20%3A%20%22%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%95%86%E5%93%81%22%2C%0Aprice%20%3A%20991%0A%7D%2C%0A%221230%22%20%3A%20%7B%0Aname%20%3A%20%22%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%95%86%E5%93%81%22%2C%0Aprice%20%3A%20992%0A%7D%2C%0A%221140%22%20%3A%20%7B%0Aname%20%3A%20%22%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%95%86%E5%93%81%22%2C%0Aprice%20%3A%20993%0A%7D%2C%0A%221230%22%20%3A%20%7B%0Aname%20%3A%20%22%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%95%86%E5%93%81%22%2C%0Aprice%20%3A%209945%0A%7D%0A%7D%0A%0Avar%20id%20%3D%20%221140%22%3B%0Afor(var%20attr%20in%20json)%7B%0Aif(attr%20%3D%3D%20id)%7B%0Aconsole.log(%22%E5%8C%B9%E9%85%8D%22%2Cjson%5Battr%5D)%3B%0Abreak%3B%0A%7D%0A%7D%0A%E6%97%A0%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%B9%8B%E4%B8%AD%E6%95%B0%E6%8D%AE%E6%9F%A5%E6%89%BE%3B%0Avar%20keys%20%3D%20Object.keys(json)%3B%0Avar%20index%20%3D%20keys.indexOf(id)%3B%0Aconsole.log(json%5Bkeys%5Bindex%5D%5D)%0Aconsole.log(json%5Bid%5D)%0Aconsole.log(Object.values(json)%5Bindex%5D%0Aconsole.log(Object.values(json))%3B%0A%0A%60%60%60%0A%0A%0A%0A</center></en-note>]]></content><created>20190625T013236Z</created><updated>20190626T124632Z</updated><note-attributes><author>2205524875@qq.com</author><source>desktop.win</source><source-application>yinxiang.win32</source-application><content-class>yinxiang.markdown</content-class></note-attributes></note></en-export>
