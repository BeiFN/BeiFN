<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20190708T084729Z" application="Evernote/Windows" version="6.x">
<note><title>day16 面向对象</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><span style="font-size: 16px;">什么是面向对象？</span></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">Object Oriented</span></div></div><div><br/></div><div><font style="font-size: 12pt;"><br/></font></div><div><font style="font-size: 12pt;">面向对象的目标 :&nbsp; 提供一种解决问题的高效解决方案;</font></div><div><font style="font-size: 12pt;"><br/></font></div><div><font style="font-size: 12pt;">和面向过程对比</font></div><div><span style="font-size: 16px;">面向过程的C语言及缺点？</span></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">C语言 &nbsp; 贝尔实验室</span></div><div><br/></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">int age</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">char name</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">C语言是一个典型的面相过程的语言</span></div><div><br/></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">写代码的顺序，关注前后的代码顺序</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">第一步.....</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">第二步.....</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">第三步.....</span></div><div><br/></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">var name = &quot;王尼玛&quot;;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">var age = 30;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">var sex = &quot;不详&quot;;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">var school = &quot;清华&quot;;</span></div><div><br/></div></div><div><br/></div><div><span style="font-size: 16px;">对象的出现？ 信息打包的好处？</span></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">var 王尼玛 = {</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;name :&nbsp;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;sex :</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;age :</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;school :</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">}</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">对象类型,</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">delete 王尼玛;</span></div><div><br/></div><div><br/></div></div><div><br/></div><div><span style="font-size: 16px;">面向对象的编程语言</span></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">如何简化创建一个对象的过程？</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">类 &nbsp;-----&gt; 构造函数</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">class Student {</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;this.name;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;this.sex;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;this.age;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;this.school;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">}</span></div><div><br/></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">function Student(){</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;this.name;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">&nbsp; &nbsp; &nbsp;this.sex;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">}</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">new Student();</span></div></div><div><br/></div><div><span style="font-size: 16px;">面向对象是一种编程方式，更是一种思维方式</span></div><div><br/></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">面相过程，关注顺序;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">面相对象，关注分工;</span></div><div><span style="font-size: 16px; background-color: rgb(251, 250, 248); color: rgb(51, 51, 51);">顺序已经不在重要了，重要的是</span><span style="color: rgb(51, 51, 51); font-size: 16px;">职责分配。</span></div></div><div><br/></div><div><span style="font-size: 16px;">面向对象的重点在与【分工】</span></div><div><span style="font-size: 16px;">面相对象的三大特点：</span></div><div><span style="font-size: 16px;"><span style="font-size: 16px; color: rgb(255, 0, 0);">封装、继承</span>、<span style="font-size: 16px; color: rgb(28, 51, 135);">多态</span></span></div><div><br/></div><div><span style="font-size: 16px;">封装即是分工的表现</span></div><div><span style="font-size: 16px;">模块化即分工的一种</span></div><div><span style="font-size: 16px;"><br/></span></div><div><br/></div><div><font style="font-size: 12pt;">OO 面向对象编程:</font></div><div><font style="font-size: 12pt;"><br/></font></div><div><font style="font-size: 12pt;">OOA : 面向对象分析;</font></div><div><font style="font-size: 12pt;">OOD : 面向对象设计;</font></div><div><font style="font-size: 12pt;">OOP : 面向对象编程;</font></div><div><font style="font-size: 12pt;"><br/></font></div><div><span style="font-size: 12pt;">构造函数</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;工厂模式</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;解决重复创造对象的麻烦。</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;以目的性为导向。</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;构造函数是天生的工厂模式，每次调用构造函数，都创建了一个全新的函数。</span></div><div><span style="font-size: 12pt;"><br/></span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;构造函数作为集合对内容进行关联，集合的本质是设计耦合关系，在合适时机调用正确的方法。</span></div><div><span style="font-size: 12pt;"><br/></span></div><div><span style="font-size: 12pt;">对象整合方法</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;* 构造函数&nbsp;&nbsp;</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;函数被创建时，js默认创建原型对象，和原型对象和它<font style="color: rgb(255, 0, 0);">伴生</font></span></div><div><span style="font-size: 12pt;"><b>function Table(){};</b></span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;* 原型对象</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;存放所有属性方法</span></div><div><span style="font-size: 12pt;"><b>Table.prototype.init = function(){};</b></span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;* 实例对象</span></div><div><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用构造函数<font style="color: rgb(255, 0, 0);">创建</font>，实例中存放__proto__原型指针，<font style="color: rgb(255, 0, 0);">指向</font>当前构造函数的原型。</span></div><div><span style="font-size: 12pt;"><b>var table = new Table();</b></span></div><div><span style="font-size: 12pt;"><b>table.init();</b></span></div><div><span style="font-size: 12pt;"><br/></span></div><div><span style="font-size: 12pt;"><font style="color: rgb(255, 0, 0);">&nbsp;&nbsp;&nbsp;&nbsp;原型链：实例可以访问原型对象中的方法，从实例-原型-构造函数-object逐层查找，这种机制为原型链。</font></span></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></en-note>]]></content><created>20190708T015216Z</created><updated>20190708T022118Z</updated><note-attributes><author>【千锋互联】JS高级讲师--尹涛</author><source>desktop.win</source><source-application>evernote.win32</source-application><reminder-order>20161202T051649Z</reminder-order></note-attributes></note></en-export>
