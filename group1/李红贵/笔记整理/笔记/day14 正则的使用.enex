<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20190630T155107Z" application="Evernote/Windows" version="6.x">
<note><title>day14 正则的使用</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><font style="font-size: 14pt;"><b>正则表达式的应用</b></font></div><div><font style="font-size: 12pt;"><b>&nbsp;&nbsp;&nbsp;&nbsp;常用正则表达式</b></font></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;手机号判定</div><div>/1[3-9]\d{9}/</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;邮箱判定</div><div>/^([a-zA-Z]|[0-9])(\w|\-)+@[a-zA-Z0-9]+\.([a-zA-Z]{2,4})$/</div><div><br/></div><div><br/></div><div><font style="font-size: 12pt;"><b>&nbsp;&nbsp;&nbsp;&nbsp;高级查找</b></font></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作用：给所有目标添加标签，修改样式</div><div><span style="font-size: 12pt;">为什么要使用正则表达式？</span></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="color: rgb(51, 51, 51); font-size: 12pt;">btn.onclic = function(){</span><br/></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">var value = &quot;XXX&quot;;</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">var contentText = content.innerHTML;</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">var nowReg = new RegExp(&quot;(&quot;+value+&quot;)&quot;,&quot;g&quot;);</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">content.innerHTML = contentText.replace(nowReg, &quot;&lt;span&gt;$1&lt;/span&gt;&quot;;</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">}</span></div></div><div><br/></div><div><font style="font-size: 12pt;"><b>&nbsp;&nbsp;&nbsp;&nbsp;去标签</b></font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;清除单个标签</font></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="color: rgb(51, 51, 51); font-size: 12pt;">// 清除span标签</span><br/></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">var regSpan = /&lt;\/?span&gt;/g;</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">content.innerHTML = contentText.replace(regSpan&nbsp;&nbsp;, &quot;&quot;);</span></div></div><div><br/></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;清除所有标</font><span style="font-size: 14pt;">签</span></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 12pt; color: rgb(51, 51, 51);"><br/></span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">// var reg = /&lt;[^&gt;&lt;]+&gt;/g;//贪婪模式</span></div><div><span style="color: rgb(51, 51, 51); font-size: 12pt;">var reg = /&lt;(.*?)&gt;/g;</span><br/></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">var targetString = input.value;</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">var resString = targetString.replace(reg,&quot;&quot;);</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);">showView.value = resString;</span></div></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div><font style="font-size: 12pt;"><b>&nbsp;&nbsp;&nbsp;&nbsp;表单验证</b></font></div><div><font style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件基本结构</font></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">插件.js 中</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">// ----------------插件基本结构; --------------------</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">// 1. 把插件放在匿名函数之中,确保插件的各个变量不受其他插件影响;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">// var $ = 10;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">;+function(window){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// console.log(window);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">//实际插件方法</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function validate(){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(&quot;验证插件执行&quot;);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log($)</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function $(selector){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var res = null;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; (res = document.querySelectorAll(selector)).length === 1 ? res[0] : res;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 2. 局部变量validate 赋值给window，让validate变量全局可访问;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.validate = validate;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">}(window)</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">使用插件的html文件中</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">//引用插件</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&lt;script src=&quot;./插件.js&quot;&gt;&lt;/script&gt;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">//调用插件方法</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&lt;script&gt;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 1. 调用模式 =&gt; 插件使用者调用 ; 调用时要告知插件要在哪里进行验证;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validate(&quot;#form&quot; , 参数B);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&lt;/script&gt;</span></div></div><div><font style="font-size: 12pt;"><br/></font></div><div><font style="font-size: 12pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表单验证封装</font></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="font-size: 12pt; color: rgb(51, 51, 51);"><br/></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">流程</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">1.制定策略数据</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">2.根据策略和传入插件函数的参数获取目标元素</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">3.给目标元素绑定验证事件</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">4.根据策略数据获取正则表达式，验证目标元素数据</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">5.根据验证结果给目标元素添加class属性</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">// ----------------插件基本结构; --------------------</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">// 1. 把插件放在匿名函数之中,确保插件的各个变量不受其他插件影响;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">// var $ = 10;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">;+function(window){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 策略列表;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var strategyList = {</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;email&quot; : {</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reg : /^[0-9a-z]\w{5,19}@[a-z0-9]{2,10}\.(com|cn|net)$/i</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;password&quot; : {</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reg : /^[\!\@\#\$\%\^\&amp;\*\(\)0-9a-z_\-]{6,}$/i</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 可能是定制的;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;username&quot; : {</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reg : /^[\u4e00-\u9fa5a-z0-9_\-]{4,20}$/</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function validate(selector){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 1. 根据用户输入选择器,选择相应的父级元素;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var parent = $(selector);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 2. 在父级元素下找到所有的input输入框;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var inputList = parent.querySelectorAll(&quot;input[v-type]&quot;);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(inputList);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(var i = 0 , input ; input = inputList[i++] ; ){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input.addEventListener(&quot;blur&quot;,validateText.bind(input,input.getAttribute(&quot;v-type&quot;)))</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 验证函数;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function validateText(type){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 我们要知道啥才能区分验证的不同;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // value =&gt; 当前验证元素的值;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var value = this.value;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(value);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // var reg =</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 设计模式 =&gt; 策略模式; =&gt; 提前定制策略,应对需求;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(strategyList[type].reg.test(value)){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 验证通过;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 这种方式能用一次;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // this.className += &quot;success&quot;;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 先清空再添加;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // if(/success|error/.test(this.className)){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.className = this.className.replace(/success|error/g,&quot;success&quot;)</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // }else{</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.className += &quot; success&quot;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; addValidateState(&quot;success&quot;,this);</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 验证不通过;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // this.className += &quot;error&quot;;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; addValidateState(&quot;error&quot;,this)</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 验证状态的添加;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function addValidateState(type,ele){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(/success|error/.test(ele.className)){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ele.className = ele.className.replace(/success|error/g,type)</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ele.className += &quot; &quot;+type</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function $(selector){</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var res = null;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; (res = document.querySelectorAll(selector)).length === 1 ? res[0] : res;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 2. 局部变量validate 赋值给window，让validate变量全局可访问;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.validate = validate;</span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�; font-size: 9.0pt;">}(window)</span></div><div><span style="font-size: 12pt; color: rgb(51, 51, 51);"><br/></span></div></div><div><br/></div><div><br/></div><div><font style="font-size: 12pt; color: rgb(255, 0, 0);"><b>&nbsp;&nbsp;&nbsp;&nbsp;replace高级使用</b></font></div><div style="box-sizing: border-box; padding: 8px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;script&gt;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var str = &quot;hello world123hello world&quot;;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var reg = /([a-z])([a-z])/gi</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // console.log()</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // replace 扩展用法;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var count = 0;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var resString = str.replace(reg ,function( res , $1 , $2 ){</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // console.log(arguments);</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // res&nbsp;&nbsp; =&gt; 匹配到的字符;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 如果有组，那么 res 和 index之间 会出现对应组的内容;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // index =&gt; 匹配到的字符在字符串之中的下标。</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // arguments[arguments.length - 2]</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // str&nbsp;&nbsp; =&gt; 整条字符串;目标字符串</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // arguments[arguments.length - 1]</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count ++;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 预处理;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var index = arguments[arguments.length - 2];</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &quot;&lt;span style=&apos;color:blue&apos;&gt;&quot;+$1+&quot;&lt;/span&gt;&quot;+</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;&lt;span style=&apos;color:red&apos;&gt;&quot;+$2+&quot;&lt;/span&gt;&quot; + count</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; })&nbsp;&nbsp;&nbsp;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; console.log(resString);</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; document.body.innerHTML = resString;</font></span></div><div style="min-height: 12pt; text-align: left;"><span style="min-height: 12pt; font-family: ΢���ź�;"><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/script&gt;</font></span></div></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div><font style="font-size: 12pt; color: rgb(255, 0, 0);"><b><br/></b></font></div></en-note>]]></content><created>20190630T154340Z</created><updated>20190630T155059Z</updated><note-attributes><author>15616643714@163.com</author><source>desktop.win</source><source-application>yinxiang.win32</source-application></note-attributes></note></en-export>
